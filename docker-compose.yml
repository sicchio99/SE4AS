version: '3.8'

services:

  #Message Broker
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto_container
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: always
    ports:
      - '1883:1883'
      - '9001:9001'

  #Database
  influxdb:
    image: influxdb:latest
    container_name: influxdb_container
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin
      - DOCKER_INFLUXDB_INIT_ORG=univaq
      - DOCKER_INFLUXDB_INIT_BUCKET=seas
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=seasinfluxdbtoken
    restart: always
    volumes:
      - influxdb_data:/var/lib/influxdb
    expose:
      - 8086
    healthcheck:
      test: [ "CMD", "influx", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5


  #Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana_container
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: always
    volumes:
      - .grafana_data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - influxdb


  #MAPE-K components

  monitor:
    build:
      context: ./Monitor
      dockerfile: Dockerfile
    container_name: seas_monitor_container
    restart: always
    depends_on:
      - mosquitto
      - influxdb

  analyzer:
    build:
      context: ./Analyzer
      dockerfile: Dockerfile
    container_name: seas_analyzer_container
    restart: always
    depends_on:
      - mosquitto
      - monitor
      - influxdb

  planner:
    build:
      context: ./Planner
      dockerfile: Dockerfile
    container_name: seas_planner_container
    restart: always
    depends_on:
      - mosquitto
      - analyzer

  executor:
    build:
      context: ./Executor
      dockerfile: Dockerfile
    container_name: seas_executor_container
    restart: always
    depends_on:
      - mosquitto
      - planner

  managed_resources:
    build:
      context: ./ManagedResources
      dockerfile: Dockerfile
    container_name: seas_resources_container
    restart: always
    depends_on:
      - mosquitto

  config_container:
    build:
      context: ./Configure
      dockerfile: Dockerfile
    container_name: seas_configure_container
    depends_on:
      influxdb:
        condition: service_healthy

volumes:
  grafana_data:
  influxdb_data:
